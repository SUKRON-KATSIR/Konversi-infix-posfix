#include <iostream>
#include <cstdlib>
#include <cstring>
#define max 10
using namespace std;

char opd[100];
char tumpukan[10];
double result[10];
double temp;
char slice;
int top= -1;

void push (char infix) {
  if (top < max - 1) {
    top++;
    tumpukan[top] = infix;
  } else {
    cout << "Data Penuh" << endl;

  }
}

void pop () {
  if (top > - 1) {
    slice = tumpukan [top];
    top--;
  } else {
    cout << " Data kosong" << endl;
  }
}

int opr (char a) {
  if (a == '^') {
    return 3;
  } 
  if (a == '*' || a == '/') {
    return 2;
  }
  if (a == '+' || a == '-') {
    return 1;
  }
  return 0;
}

void postfix (string nama) {
  int index = 0;
  for (int i = 0; i < nama.length(); i++) {
    if (opr(nama[i]) > 0) {
      if (top < 0) {
        push(nama[i]);
      } 
      else {
        if (opr(nama[i]) <= opr(tumpukan[top])) {
          pop();
          opd[index] = slice;
          index++;
          push(nama[i]);
        } else if (opr(nama[i]) >= opr(tumpukan[top])) {
          push(nama[i]);
        }
      }
    } else if (nama[i]== '(') {
      push(nama[i]);
    } else if (nama[i]== ')') {
      pop();
      opd[index] = slice;
      index++;
    }
    else {
      opd[index] = nama[i]; 
      index++;
    }
  }

  for (int a = top; a>= 0; a--) {
    pop();
    opd[index]= slice;
    index++;
  }
  
}

void tumpuk (double a) {
  if ( top < max-1 ) {
    top = top + 1;
    result[top] = a;
  } else {
    cout << "Data penuh" << endl;
  }
}
void hapus () {
  if (top > - 1) {
    temp = result[top];
    top--;
  } else {
    cout << " Data kosong" << endl;
  }
}
void hitung(int index) {
  for (int a=0; a < index; a++) {
    if (opr(opd[a]) == 0) {
      tumpuk(double(opd[a])-48);
    } else if (opd[a]== '+') {
      hapus();
      double hitung = temp + result[top];
      hapus();
      tumpuk(hitung);
    }
    else if (opd[a]== '-') {
      hapus();
      double hitung = result[top]-temp;
      hapus();
      tumpuk(hitung);
    }
    else if (opd[a]== '/') {
      hapus();
      double hitung = temp / result[top];
      hapus();
      tumpuk(hitung);
    }
    else if (opd[a]== '*') {
      hapus();
      double hitung = temp * result[top];
      hapus();
      tumpuk(hitung);
    }    
  }
}

int main () {
  string nama;
  cout << "Masukkan infix: ";
  cin >> nama;
  postfix(nama);
  int index=0;
  for (int i = 0; i < nama.length(); i++){
    if (opd[i]!='(') {
      push(opd[i]);
      index++;
    } 
  }
  top = -1;
  hitung(index);
  cout << result[0];

  return 0;
}
